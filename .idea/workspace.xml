<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/common/Cargo.toml" />
    <cargoProject FILE="$PROJECT_DIR$/services/travel/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f0ce9a27-b413-4c05-9404-c92af16077bb" name="Changes" comment="back with .env">
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="2c0v1gve" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2duIsmLQXhLD6PPMP0TSCtWwDWs" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;Cargo.Test google::tests.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test google::tests::test_nearby_place_2.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test google::tests::test_nearby_place_3.executor&quot;: &quot;Run&quot;,
    &quot;Cargo.Test integration [common].executor&quot;: &quot;Run&quot;,
    &quot;Docker.Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.rust.reset.selective.auto.import&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;service-travel&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/d3spina/Documents/Documents - MacBook Air de Guillaume/Dev/Epitech/t-web-800/common/src/google&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;org.rust.cargo.project.model.PROJECT_DISCOVERY&quot;: &quot;true&quot;,
    &quot;org.rust.cargo.project.model.impl.CargoExternalSystemProjectAware.subscribe.first.balloon&quot;: &quot;&quot;,
    &quot;org.rust.first.attach.projects.stats&quot;: &quot;true&quot;,
    &quot;org.rust.hideNoCargoProjectNotifications/Users/d3spina/Documents/Documents - MacBook Air de Guillaume/Dev/Epitech/t-web-800/Cargo.toml&quot;: &quot;true&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/common/src/google" />
      <recent name="$PROJECT_DIR$" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/services/travel/src" />
      <recent name="$PROJECT_DIR$/services/travel/src/structure" />
      <recent name="$PROJECT_DIR$/common/src" />
    </key>
  </component>
  <component name="RunManager" selected="Cargo.Test integration [common]">
    <configuration name="Run" type="CargoCommandRunConfiguration" factoryName="Cargo Command" nameIsGenerated="true">
      <option name="command" value="run" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/services/eat" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test google::tests::test_google_2" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package common --bin common google::tests::test_google_2 -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/common" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test google::tests::test_google_3" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package common --bin common google::tests::test_google_3 -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/common" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test google::tests::test_nearby_place_1" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package common --bin common google::tests::test_nearby_place_1 -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/common" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test integration [common]" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package common --test integration" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/common" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="containerName" value="" />
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Cargo.Run" />
      <item itemvalue="Cargo.Test google::tests::test_google_2" />
      <item itemvalue="Cargo.Test google::tests::test_google_3" />
      <item itemvalue="Cargo.Test google::tests::test_nearby_place_1" />
      <item itemvalue="Cargo.Test integration [common]" />
      <item itemvalue="Docker.Dockerfile" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.Dockerfile" />
        <item itemvalue="Cargo.Test integration [common]" />
        <item itemvalue="Cargo.Test google::tests::test_nearby_place_1" />
        <item itemvalue="Cargo.Test google::tests::test_google_3" />
        <item itemvalue="Cargo.Test google::tests::test_google_2" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f0ce9a27-b413-4c05-9404-c92af16077bb" name="Changes" comment="" />
      <created>1710851745976</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1710851745976</updated>
      <workItem from="1710851747211" duration="17156000" />
      <workItem from="1710968406358" duration="1280000" />
      <workItem from="1710970232782" duration="737000" />
      <workItem from="1711355222124" duration="6650000" />
      <workItem from="1711369730945" duration="10318000" />
      <workItem from="1711456857212" duration="955000" />
      <workItem from="1711457820071" duration="2483000" />
    </task>
    <task id="LOCAL-00001" summary="back with .env">
      <option name="closed" value="true" />
      <created>1711360052588</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1711360052588</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="back with .env" />
    <option name="LAST_COMMIT_MESSAGE" value="back with .env" />
  </component>
</project>